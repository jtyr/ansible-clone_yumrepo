---

- name: Create YUM repo file ({{ repo.name }})
  yum_repository:
    name: "{{ clone_yumrepo_reponame_prefix }}{{ repo.name }}"
    description: "{{ repo.description }}"
    baseurl: "{{ repo.baseurl }}"
    gpgcheck: "{{ repo.gpgcheck | default(omit) }}"
    gpgkey: "{{ repo.gpgkey | default(omit) }}"
    enabled: "{{ repo.enabled | default(false) }}"
    state: "{{ repo.state | default(omit) }}"
  args: "{{ repo.params | default({})}}"
  tags:
    - clone_yumrepo_repofile

- block:

    - name: Sync YUM repo ({{ repo.name }})
      command: >
        reposync
          {{ repo.reposync_options | default(clone_yumrepo_reposync_options) }}
          --download_path={{ clone_yumrepo_clonepath }}
          --repoid={{ clone_yumrepo_reponame_prefix }}{{ repo.name }}
      tags:
        - clone_yumrepo_reposync

    - name: Create YUM repo files ({{ repo.name }})
      command: >
        createrepo
          {{ repo.createrepo_options | default(clone_yumrepo_createrepo_options) }}
          {{ clone_yumrepo_clonepath }}/{{ clone_yumrepo_reponame_prefix }}{{ repo.name }}
      tags:
        - clone_yumrepo_createrepo

    - name: Create base dir for symlink ({{ repo.name }})
      file:
        path: "{{ (clone_yumrepo_webpath ~ '/' ~ repo.path) | dirname }}"
        state: directory
      tags:
        - clone_yumrepo_symlink

    - name: Create repo symlink ({{ repo.name }})
      file:
        src: "{{ clone_yumrepo_clonepath }}/{{ clone_yumrepo_reponame_prefix }}{{ repo.name }}"
        dest: "{{ clone_yumrepo_webpath }}/{{ repo.path }}"
        state: link
      tags:
        - clone_yumrepo_symlink

    - name: Download GPG key ({{ repo.name }})
      get_url:
        url: "{{ repo.gpgkey }}"
        dest: "{{ clone_yumrepo_webpath }}/{{ repo.key_filename | default('GPG-KEY-' ~ repo.name) }}"
      when: >
        'gpgkey' in repo
      tags:
        - clone_yumrepo_gpgkey

  when: >
    'state' not in repo or
    repo.state != 'absent'

- block:

    - name: Remove cloned repo ({{ repo.name }})
      file:
        path: "{{ clone_yumrepo_clonepath }}/{{ clone_yumrepo_reponame_prefix }}{{ repo.name }}"
        state: absent
      tags:
        - clone_yumrepo_reposync

    - name: Remove repo symlink ({{ repo.name }})
      file:
        path: "{{ clone_yumrepo_webpath }}/{{ repo.path }}"
        state: absent
      tags:
        - clone_yumrepo_symlink

    - name: Find empty directories
      command: find {{ clone_yumrepo_webpath }} -type d -empty
      register: clone_yumrepo_empty_dirs_result
      changed_when: false
      tags:
        - clone_yumrepo_symlink

    - name: Remove empty directories ({{ repo.name }})
      file:
        path: "{{ item }}"
        state: absent
      loop: "{{ clone_yumrepo_empty_dirs_result.stdout_lines }}"
      tags:
        - clone_yumrepo_symlink

    - name: Remove GPG key ({{ repo.name }})
      file:
        path: "{{ clone_yumrepo_webpath }}/{{ repo.key_filename | default('GPG-KEY-' ~ repo.name) }}"
        state: absent
      tags:
        - clone_yumrepo_gpgkey

  when: >
    'state' in repo and
    repo.state == 'absent'
